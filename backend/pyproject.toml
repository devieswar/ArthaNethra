[project]
name = "arthanethra"
version = "1.0.0"
description = "AI-powered financial investigation platform"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "ArthaNethra Team", email = "dev@arthanethra.ai"},
]
keywords = ["financial", "ai", "risk-detection", "knowledge-graph", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    # FastAPI Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    # AWS Bedrock
    "boto3>=1.34.34",
    "botocore>=1.34.34",
    # Document Processing
    "PyPDF2>=3.0.1",
    "pdfplumber>=0.10.3",
    "python-docx>=1.1.0",
    # LandingAI
    "requests>=2.31.0",
    "aiohttp>=3.9.1",
    "httpx>=0.26.0",
    # Vector Database (Weaviate)
    "weaviate-client>=4.4.0",
    # Graph Database (Neo4j)
    "neo4j>=5.16.0",
    # Data Processing
    "pandas>=2.1.4",
    "numpy>=1.26.3",
    # Utilities
    "python-dotenv>=1.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dateutil>=2.8.2",
    # Logging
    "loguru>=0.7.2",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    # Code Quality
    "ruff>=0.1.15",
    "black>=24.1.1",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/devieswar/ArthaNethra"
Documentation = "https://github.com/devieswar/ArthaNethra/docs"
Repository = "https://github.com/devieswar/ArthaNethra"
Issues = "https://github.com/devieswar/ArthaNethra/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.15",
    "black>=24.1.1",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.ruff]
# Ruff configuration for ArthaNethra backend
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=. --cov-report=html --cov-report=term"

